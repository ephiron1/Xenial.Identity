@page
@model Xenial.Identity.Areas.Admin.Pages.UsersModel
@{
    Layout = "/Views/Shared/_LayoutWithoutSide.cshtml";
}

@{

}

<div class="admin-users-page">
    <h1>Users</h1>

    @(Html.Grid(Model.Users).Build(columns =>
    {
        columns.Add(model => $"<i class=\"fa fa-fingerprint\" data-copy=\"{model.Id}\" title=\"{model.Id}\"></i>")
            .Named(nameof(UsersModel.UserOutputModel.Id))
            .Encoded(false)
            .Titled("Id")
            .Css("user-image");

        columns.Add(model => model.UserImageTag)
            .Encoded(false)
            .Filterable(false)
            .Sortable(false)
            .Css("user-image");

        columns.Add(model => $"<a href=\"/Admin/Users/View/{model.Id}\">{model.UserName}</a>")
            .Named(nameof(UsersModel.UserOutputModel.UserName))
            .Encoded(false)
            .Sortable(true)
            .Filterable(true)
            .Titled("Username");

        columns.Add(model => model.FirstName).Titled("Firstname");
        columns.Add(model => model.LastName).Titled("Lastname");

        columns.Add(model => $"<div class=\"actions-container\"><a href=\"/Admin/Users/Delete/{model.Id}\" class=\"button\"><i class=\"fas fa-times\"></i></a><a class=\"button\" href=\"/Admin/Users/Edit/{model.Id}\"><i class=\"fas fa-pen\"></i></a></div>")
            .Encoded(false)
            .Css("actions")
            .Titled("<div class=\"actions-container\"><a class=\"button\" href=\"/Admin/Users/Add\"><i class=\"fas fa-plus\"></i></button></div>");
    })
    .Using(GridFilterMode.Header)
    .Empty("No data found")
    .Filterable(GridFilterCase.Lower)
    .Sortable()
    )
</div>
