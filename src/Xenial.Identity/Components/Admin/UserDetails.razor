@page "/Admin2/User/{UserId}"
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@using MudBlazor.Utilities
@using Newtonsoft.Json
@using Xenial.Identity.Data
@using Xenial.Identity.Infrastructure
@inject UserManager<XenialIdentityUser> UserManager
@inject RoleManager<IdentityRole> RolesManager
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager

<MudStack Row Spacing="2">
    <MudFab Icon="@Icons.Filled.ArrowBack" Size="@Size.Large" Color="Color.Surface" Href="/Admin2/Users" />
    <MudText Typo="Typo.h3" GutterBottom>User</MudText>
</MudStack>

@if (User is not null)
{
    <div class="small-tabs">
        <MudContainer MaxWidth="MaxWidth.Small">
            <MudStack>
                <MudPaper Class="pa-4">
                    <MudStack Row="true">
                        <UserAvatar User="@User" Size="Size.Large" />
                        <MudStack Justify="Justify.Center" Spacing="0">
                            <MudText Typo="Typo.body1">@User.DisplayName</MudText>
                            <MudText Typo="Typo.body2">@User.Email</MudText>
                        </MudStack>
                    </MudStack>
                </MudPaper>

                <MudTabs ApplyEffectsToContainer="true"
                     Centered
                     Elevation="4"
                     Rounded="true"
                     PanelClass="pa-6"
                     ActivePanelIndex="@ActivePanelIndex"
                     ActivePanelIndexChanged="@(i => SetActivePanelIndex(i))">
                    <MudTabPanel ToolTip="Name" Icon="@Icons.Filled.Person">
                        <MudStack Spacing="4">
                            <MudStack Row>
                                <MudTextField Label="Firstname"
                                          Variant="Variant.Filled"
                                          FullWidth
                                          Margin="Margin.Dense"
                                          @bind-Value="@User.FirstName" />

                                <MudTextField Label="Lastname"
                                          Variant="Variant.Filled"
                                          FullWidth
                                          Margin="Margin.Dense"
                                          @bind-Value="@User.LastName" />
                            </MudStack>
                            <MudTextField Label="Fullname"
                                      Variant="Variant.Filled"
                                      FullWidth
                                      Margin="Margin.Dense"
                                      @bind-Value="@User.FullName" />

                            <MudTextField Label="Company"
                                      Variant="Variant.Filled"
                                      Margin="Margin.Dense"
                                      @bind-Value="@User.CompanyName" />

                        </MudStack>
                    </MudTabPanel>
                    <MudTabPanel ToolTip="Roles" Icon="@Icons.Filled.Groups">
                        <MudText Typo="Typo.caption">Roles</MudText>
                        <TagStringEdit @bind-Tags="@Roles" SearchFunc="@SearchRoles" />
                    </MudTabPanel>
                    <MudTabPanel ToolTip="Authentification" Icon="@Icons.Filled.Key">
                        <MudStack Spacing="4">
                            <MudTooltip Inline="false" RootStyle="width: unset" Text="@(User.EmailConfirmed ? "E-Mail is confirmed" : "E-Mail is NOT confirmed")">
                                <MudTextField Label="E-Mail"
                                          Variant="Variant.Filled"
                                          FullWidth
                                          Margin="Margin.Dense"
                                          Adornment="Adornment.End"
                                          AdornmentColor="@(User.EmailConfirmed ? Color.Success : Color.Error)"
                                          AdornmentIcon="@(User.EmailConfirmed ? Icons.Filled.CheckCircle : Icons.Filled.CheckCircleOutline)"
                                          OnAdornmentClick="() => User.EmailConfirmed = !User.EmailConfirmed"
                                          @bind-Value="@User.Email" />
                            </MudTooltip>

                            <MudTooltip Inline="false" RootStyle="width: unset" Text="@(User.PhoneNumberConfirmed ? "Phonenumber is confirmed" : "Phonenumber is NOT confirmed")">
                                <MudTextField Label="Phonenumber"
                                          Variant="Variant.Filled"
                                          FullWidth
                                          Margin="Margin.Dense"
                                          Adornment="Adornment.End"
                                          AdornmentColor="@(User.PhoneNumberConfirmed ? Color.Success : Color.Error)"
                                          AdornmentIcon="@(User.PhoneNumberConfirmed ? Icons.Filled.CheckCircle : Icons.Filled.CheckCircleOutline)"
                                          OnAdornmentClick="() => User.PhoneNumberConfirmed = !User.PhoneNumberConfirmed"
                                          @bind-Value="@User.PhoneNumber" />
                            </MudTooltip>
                        </MudStack>
                    </MudTabPanel>
                    <MudTabPanel ToolTip="Address" Icon="@Icons.Filled.LocationCity">
                        <MudStack Spacing="4">
                            <MudTextField Label="Address 1"
                                      Variant="Variant.Filled"
                                      Margin="Margin.Dense"
                                      @bind-Value="@User.AddressStreetAddress1" />

                            <MudTextField Label="Address 2"
                                      Variant="Variant.Filled"
                                      Margin="Margin.Dense"
                                      @bind-Value="@User.AddressStreetAddress2" />

                            <MudStack Row>
                                <MudTextField Label="Postalcode"
                                          Style="width: 100px"
                                          Variant="Variant.Filled"
                                          Margin="Margin.Dense"
                                          Class="flex-grow-0"
                                          @bind-Value="@User.AddressPostalCode" />

                                <MudTextField Label="City"
                                          Variant="Variant.Filled"
                                          Margin="Margin.Dense"
                                          @bind-Value="@User.AddressLocality" />

                            </MudStack>
                            <MudStack Row>
                                <MudTextField Label="Region"
                                          Variant="Variant.Filled"
                                          Margin="Margin.Dense"
                                          @bind-Value="@User.AddressRegion" />
                                <MudTextField Label="Country"
                                          Variant="Variant.Filled"
                                          Margin="Margin.Dense"
                                          @bind-Value="@User.AddressCountry" />
                            </MudStack>
                        </MudStack>
                    </MudTabPanel>
                    <MudTabPanel ToolTip="Appearance" Icon="@Icons.Filled.RemoveRedEye">
                        <MudStack Spacing="4">
                            <MudTextField Label="Initials"
                                      Variant="Variant.Filled"
                                      Margin="Margin.Dense"
                                      @bind-Value="@User.Initials" />

                            <MudColorPicker Label="Color"
                                        Variant="Variant.Filled"
                                        DisableToolbar="false"
                                        DisableAlpha="true"
                                        DisableColorField="false"
                                        DisablePreview="false"
                                        DisableSliders="false"
                                        DisableInputs="true"
                                        DisableModeSwitch="true"
                                        ColorPickerMode="ColorPickerMode.RGB"
                                        PickerVariant="PickerVariant.Dialog"
                                        Value="@color"
                                        ValueChanged="ColorChanged" />

                            <InputFile id="profilePictureInput" OnChange="@UploadProfilePicture" hidden accept=".jpg, .jpeg, .png, .svg" />

                            <MudButton HtmlTag="label"
                                   Variant="Variant.Filled"
                                   Color="Color.Primary"
                                   StartIcon="@Icons.Filled.CloudUpload"
                                   for="profilePictureInput">
                                Upload Profile Picture
                            </MudButton>

                            @if (User.Picture.Length > 0)
                            {
                                <MudButton Variant="Variant.Filled"
                                   Color="Color.Error"
                                   StartIcon="@Icons.Filled.Delete"
                                   OnClick="@DeleteProfilePicture">Remove Profile Picture</MudButton>
                            }

                            <MudDivider />

                        </MudStack>
                    </MudTabPanel>
                    <MudTabPanel ToolTip="Claims" Icon="@Icons.Filled.Class">
                        <UserClaimsSmall User="@User" AllowEdit />
                    </MudTabPanel>
                </MudTabs>

                <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="async () => await SaveUser()">Save</MudButton>

            </MudStack>
        </MudContainer>
    </div>

}
@code {

    private IList<string> Roles { get; set; } = new List<string>();

    [Parameter]
    public string UserId { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = nameof(ActivePanelIndex))]
    public int ActivePanelIndex { get; set; } = 0;

    private void SetActivePanelIndex(int activePanelIndex)
    {
        ActivePanelIndex = activePanelIndex;
        NavigationManager.NavigateTo(
            NavigationManager.GetUriWithQueryParameter(nameof(ActivePanelIndex), activePanelIndex)
        );
    }

    public XenialIdentityUser User { get; set; }
    public MudColor color;

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        await ReloadUser();
    }

    private void ColorChanged(MudColor newColor)
    {
        color = newColor;
        User.Color = newColor.ToString(MudColorOutputFormats.Hex);
    }

    protected async Task ReloadUser()
    {
        User = await UserManager.FindByIdAsync(UserId);
        if (User is not null)
        {
            if (!string.IsNullOrEmpty(User.Color))
            {
                color = new MudColor(User.Color);
            }
        }
        Roles = await UserManager.GetRolesAsync(User);
    }
}
